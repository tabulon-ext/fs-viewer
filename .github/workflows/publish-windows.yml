# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Windows-Publish

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: [windows-latest]

    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - uses: actions/checkout@v2

    - name: setup-msbuild
      uses: microsoft/setup-msbuild@v1

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - run: npm install

    - run: npm run release

    - run: Compress-Archive build/ATTRIBUTION.*.json build/ATTRIBUTION.win.zip

    - name: Get release
      id: get_release
      uses: bruceadams/get-release@v1.2.2
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: Upload windows installer
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_name: fs-viewer-win-${{ github.event.release.tag_name }}.exe
        asset_path: dist/fs-viewer Setup ${{ github.event.release.tag_name }}.exe
        asset_content_type: application/octet-stream

    - name: Upload ASAR archive
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_name: fs-viewer-win-${{ github.event.release.tag_name }}.app.asar
        asset_path: dist/win-unpacked/resources/app.asar
        asset_content_type: application/octet-stream

    - name: Upload attribution files
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_name: fs-viewer-win-attributions-${{ github.event.release.tag_name }}.zip
        asset_path: build/ATTRIBUTION.win.zip
        asset_content_type: application/zip
